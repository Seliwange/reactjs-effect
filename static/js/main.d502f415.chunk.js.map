{"version":3,"sources":["components/Timer/Timer.js","App.js","index.js"],"names":["Timer","time","step","onTick","onTimeEnd","onTimeStart","onTimePause","autostart","useState","generalTime","setGeneralTime","paused","setPaused","formatSeconds","minutes","Math","floor","seconds","useEffect","interval","setInterval","count","clearInterval","className","onClick","App","autostars","console","log","timeLeft","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAGe,SAASA,EAAT,GAAqF,IAArEC,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,OAAQC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,UACpF,EAAsCC,mBAASP,GAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAA4BF,oBAAUD,GAAtC,mBAAOI,EAAP,KAAeC,EAAf,KAEMC,EAAgB,WACpB,IAAMC,EAAUC,KAAKC,MAAMP,EAAc,IACnCQ,EAAUR,EAAyB,GAAVK,EAC/B,OAAGL,EAAc,GACR,WAAIK,GAAY,KAAOG,EAAU,GAAV,WAAmBA,GAAYA,GAEvD,GAAN,OAAUH,EAAU,GAAV,WAAmBA,GAAYA,EAAzC,YAAoDG,EAAU,GAAV,WAAmBA,GAAYA,IA8BvF,OA1BAC,qBAAU,WACR,IAAIP,EAAQ,CACV,IAAMQ,EAAWC,aAAY,WAC1BV,GAAe,SAACW,GAAD,OAAWA,EAAQnB,EAAO,OACzCC,EAAOU,OACPX,GAKH,OAJmB,IAAhBO,IACDL,IACAQ,GAAU,IAEL,kBAAMU,cAAcH,OAE7B,CAACV,EAAaE,IAed,sBAAKY,UAAU,QAAf,UACE,2CACYV,OAGZ,wBAAQW,QAlBZ,WACqB,IAAhBf,GACDC,EAAeT,GAEjBW,GAAWD,GACPA,EAGFN,IAFAC,KAYA,SACGK,EAAS,QAAU,aC5Bfc,MAnBf,WAIE,OACE,qBAAKF,UAAU,MAAf,SACI,cAAC,EAAD,CACEtB,KANG,GAOHC,KANG,IAOHwB,WAAS,EACTvB,OAAQ,SAACF,GAAD,OAAU0B,QAAQC,IAAI,0FAAsB3B,IACpDG,UAAW,kBAAMuB,QAAQC,IAAI,6DAC7BvB,YAAa,SAACwB,GAAD,OAAcF,QAAQC,IAAI,2FACvCtB,YAAa,SAACuB,GAAD,OAAcF,QAAQC,IAAI,2FCXjDE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d502f415.chunk.js","sourcesContent":["import './Timer.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function Timer({time, step, onTick, onTimeEnd, onTimeStart, onTimePause, autostart}){\r\n    const [generalTime, setGeneralTime] = useState(time); \r\n    const [paused, setPaused] = useState(!autostart);\r\n\r\n    const formatSeconds = () => { \r\n      const minutes = Math.floor(generalTime / 60);\r\n      const seconds = generalTime - (minutes * 60);\r\n      if(generalTime < 60) {\r\n        return `0${minutes}` + \":\" + (seconds < 10 ? `0${seconds}` : seconds);\r\n      } else {\r\n        return `${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n      } \r\n    }\r\n\r\n    useEffect(() => { \r\n      if(!paused) { \r\n        const interval = setInterval(() => { \r\n           setGeneralTime((count) => count - step / 1000);\r\n           onTick(formatSeconds(generalTime));\r\n        }, step);\r\n        if(generalTime === 0) { \r\n          onTimeEnd(); \r\n          setPaused(true);\r\n        } \r\n        return () => clearInterval(interval);\r\n      } \r\n   }, [generalTime, paused]);\r\n\r\n    function toggle(){\r\n      if(generalTime === 0) { \r\n        setGeneralTime(time);\r\n      } \r\n      setPaused(!paused);\r\n      if(!paused){\r\n        onTimePause();\r\n      } else {\r\n        onTimeStart();\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"timer\">\r\n        <h4>\r\n          Counter: {formatSeconds(generalTime)}\r\n        </h4>\r\n\r\n        <button onClick={toggle}>\r\n          {paused ? \"Start\" : \"Pause\"}\r\n        </button>\r\n      </div>\r\n    );\r\n}","import './App.css';\nimport Timer from './components/Timer/Timer';\n\nfunction App() {\n  let time = 70;\n  let step = 1000;\n\n  return (\n    <div className=\"App\">\n        <Timer \n          time={time} \n          step={step}\n          autostars\n          onTick={(time) => console.log(\"Залишилось часу: \" + time)}\n          onTimeEnd={() => console.log(\"Час вийшов!\")}\n          onTimeStart={(timeLeft) => console.log(\"Таймер запущено!\")}\n          onTimePause={(timeLeft) => console.log(\"Таймер на паузі!\")}\n        />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}